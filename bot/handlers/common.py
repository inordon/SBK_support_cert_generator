"""
–û–±—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ (/start, /help –∏ —Ç.–¥.).
"""

import logging
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from core.service import get_certificate_service
from ..keyboards import get_main_menu_admin, get_main_menu_verify, ButtonTexts
from config.settings import get_settings

logger = logging.getLogger(__name__)
router = Router()

# –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
certificate_service = get_certificate_service()
settings = get_settings()


@router.message(CommandStart())
async def start_command(message: Message, state: FSMContext, user_permissions: dict):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    await state.clear()  # –û—á–∏—â–∞–µ–º –ª—é–±—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è

    user_name = message.from_user.full_name or f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id}"

    if user_permissions['is_admin']:
        welcome_text = (
            f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!\n\n"
            "üîë –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
            "‚Ä¢ üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤\n"
            "‚Ä¢ üìã –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–∏—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤\n"
            "‚Ä¢ üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤\n"
            "‚Ä¢ üîé –ü–æ–∏—Å–∫ –ø–æ –¥–æ–º–µ–Ω—É –∏ –ò–ù–ù\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )
        keyboard = get_main_menu_admin()

    else:
        welcome_text = (
            f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!\n\n"
            "üîç –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
            "‚Ä¢ üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –ø–æ ID\n"
            "‚Ä¢ üîé –ü–æ–∏—Å–∫ –ø–æ –¥–æ–º–µ–Ω—É –∏ –ò–ù–ù\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )
        keyboard = get_main_menu_verify()

    await message.answer(welcome_text, reply_markup=keyboard)


@router.message(Command("help"))
@router.message(F.text == ButtonTexts.HELP)
async def help_command(message: Message, user_permissions: dict):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help –∏ –∫–Ω–æ–ø–∫–∏ —Å–ø—Ä–∞–≤–∫–∏."""

    if user_permissions['is_admin']:
        help_text = (
            "üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)\n\n"

            "üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "‚Ä¢ /start - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
            "‚Ä¢ /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"

            "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:\n"
            "1. –ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç'\n"
            "2. –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è wildcard: *.example.com)\n"
            "3. –í–≤–µ–¥–∏—Ç–µ –ò–ù–ù (10 –∏–ª–∏ 12 —Ü–∏—Ñ—Ä)\n"
            "4. –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è\n"
            "5. –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
            "6. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ\n\n"

            "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:\n"
            "‚Ä¢ –í–≤–µ–¥–∏—Ç–µ ID —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ XXXXX-XXXXX-XXXXX-XXXXX\n"
            "‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ\n\n"

            "üîé –ü–æ–∏—Å–∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:\n"
            "‚Ä¢ –ü–æ –¥–æ–º–µ–Ω—É: –Ω–∞–π—Ç–∏ –≤—Å–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –¥–æ–º–µ–Ω–∞\n"
            "‚Ä¢ –ü–æ –ò–ù–ù: –Ω–∞–π—Ç–∏ –≤—Å–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n\n"

            "üìã –ú–æ–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:\n"
            "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤–∞–º–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤\n"
            "‚Ä¢ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ, –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ\n\n"

            "üìÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–æ–º–µ–Ω–æ–≤:\n"
            "‚Ä¢ example.com\n"
            "‚Ä¢ sub.example.com\n"
            "‚Ä¢ my-site.com\n"
            "‚Ä¢ *.example.com\n"
            "‚Ä¢ *.sub.example.com\n\n"

            "‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
            "‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ë–î –∏ —Ñ–∞–π–ª—ã\n"
            "‚Ä¢ –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É\n"
            "‚Ä¢ ID —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 4 —Å–∏–º–≤–æ–ª–∞—Ö\n"
            "‚Ä¢ –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è"
        )
        keyboard = get_main_menu_admin()

    else:
        help_text = (
            "üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É (–ü—Ä–æ–≤–µ—Ä–∫–∞)\n\n"

            "üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "‚Ä¢ /start - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
            "‚Ä¢ /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"

            "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:\n"
            "1. –ù–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç'\n"
            "2. –í–≤–µ–¥–∏—Ç–µ ID —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ XXXXX-XXXXX-XXXXX-XXXXX\n"
            "3. –ü–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞\n\n"

            "üîé –ü–æ–∏—Å–∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:\n"
            "‚Ä¢ –ü–æ –¥–æ–º–µ–Ω—É: –Ω–∞–π—Ç–∏ –≤—Å–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –¥–æ–º–µ–Ω–∞\n"
            "‚Ä¢ –ü–æ –ò–ù–ù: –Ω–∞–π—Ç–∏ –≤—Å–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n\n"

            "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ:\n"
            "‚Ä¢ ID —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞\n"
            "‚Ä¢ –î–æ–º–µ–Ω–Ω–æ–µ –∏–º—è\n"
            "‚Ä¢ –ò–ù–ù –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n"
            "‚Ä¢ –ü–µ—Ä–∏–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è\n"
            "‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
            "‚Ä¢ –°—Ç–∞—Ç—É—Å (–∞–∫—Ç–∏–≤–µ–Ω/–ø—Ä–æ—Å—Ä–æ—á–µ–Ω/–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω)\n"
            "‚Ä¢ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è\n\n"

            "üéØ –°—Ç–∞—Ç—É—Å—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:\n"
            "‚Ä¢ ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω - —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω\n"
            "‚Ä¢ ‚ö†Ô∏è –ò—Å—Ç–µ–∫–∞–µ—Ç - –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω–µ–µ 30 –¥–Ω–µ–π\n"
            "‚Ä¢ ‚ö†Ô∏è –ü—Ä–æ—Å—Ä–æ—á–µ–Ω - —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç–µ–∫\n"
            "‚Ä¢ ‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω - —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω\n\n"

            "üí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:\n"
            "‚Ä¢ ID —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –º–æ–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
            "‚Ä¢ –ü—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ –¥–æ–º–µ–Ω—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ\n"
            "‚Ä¢ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –∏—Å—Ç–æ—Ä–∏—é"
        )
        keyboard = get_main_menu_verify()

    await message.answer(help_text, reply_markup=keyboard)


@router.message(Command("cancel"))
async def cancel_command(message: Message, state: FSMContext, user_permissions: dict):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ç–µ–∫—É—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π."""
    await state.clear()

    keyboard = get_main_menu_admin() if user_permissions['is_admin'] else get_main_menu_verify()

    await message.answer(
        "‚ùå –¢–µ–∫—É—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        reply_markup=keyboard
    )


@router.message(Command("status"))
async def status_command(message: Message, user_permissions: dict):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""

    if not user_permissions['is_admin']:
        await message.answer(
            "‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.",
            reply_markup=get_main_menu_verify()
        )
        return

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = certificate_service.get_statistics()

        db_stats = stats['database']
        file_stats = stats['file_storage']

        status_text = (
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n\n"

            "üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:\n"
            f"‚Ä¢ –í—Å–µ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: {db_stats['total_certificates']}\n"
            f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {db_stats['active_certificates']}\n"
            f"‚Ä¢ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö: {db_stats['expired_certificates']}\n"
            f"‚Ä¢ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {db_stats['inactive_certificates']}\n\n"

            "üìÅ –§–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:\n"
            f"‚Ä¢ –§–∞–π–ª–æ–≤: {file_stats['total_files']}\n"
            f"‚Ä¢ –†–∞–∑–º–µ—Ä: {file_stats['total_size_mb']} –ú–ë\n"
            f"‚Ä¢ –ì–æ–¥—ã: {', '.join(file_stats['years_covered']) if file_stats['years_covered'] else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}\n"
            f"‚Ä¢ –ü—É—Ç—å: {file_stats['base_path']}\n\n"

            f"üïí –û–±–Ω–æ–≤–ª–µ–Ω–æ: {stats['last_updated'][:19]}"
        )

        await message.answer(status_text, reply_markup=get_main_menu_admin())

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await message.answer(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã.",
            reply_markup=get_main_menu_admin()
        )


@router.message()
async def unknown_message(message: Message, user_permissions: dict):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–∏—Å—Ç–µ–º–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    if message.content_type != 'text':
        return

    keyboard = get_main_menu_admin() if user_permissions['is_admin'] else get_main_menu_verify()

    await message.answer(
        "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥–æ–π /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.",
        reply_markup=keyboard
    )